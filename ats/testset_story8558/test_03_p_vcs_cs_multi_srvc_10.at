# Test Case 03.
# Quick note - the parallel functionality is tested by existing ats
# Description:
# To ensure that it is possible to specify, and deploy,
# a vcs-clustered-service containing the maximum number
# of allowed services, in this case 10. Below a vcs-clustered-service
# of configuration active=1 standby=1.

# Prerequisite - LITP Deployment
runLitpScript ../testset_common/common.atlib

# 1. Create a failover service group and services.

litp create -t vcs-clustered-service -p /deployments/test/clusters/cluster1/services/CS1 -o name=cs1 -o node_list=node_1,node_2 active=1 standby=1

litp create -t service -p /software/services/service00 -o service_name=service00
litp create -t service -p /software/services/service01 -o service_name=service01
litp create -t service -p /software/services/service02 -o service_name=service02
litp create -t service -p /software/services/service03 -o service_name=service03
litp create -t service -p /software/services/service04 -o service_name=service04
litp create -t service -p /software/services/service05 -o service_name=service05
litp create -t service -p /software/services/service06 -o service_name=service06
litp create -t service -p /software/services/service07 -o service_name=service07
litp create -t service -p /software/services/service08 -o service_name=service08
litp create -t service -p /software/services/service09 -o service_name=service09

# 2. Add ha-service-config entries with ids and dependencies.

litp inherit -s /software/services/service00 -p /deployments/test/clusters/cluster1/services/CS1/applications/service00
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s00 -o service_id=service00
litp inherit -s /software/services/service01 -p /deployments/test/clusters/cluster1/services/CS1/applications/service01
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s01 -o service_id=service01 dependency_list=service00
litp inherit -s /software/services/service02 -p /deployments/test/clusters/cluster1/services/CS1/applications/service02
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s02 -o service_id=service02 dependency_list=service09
litp inherit -s /software/services/service03 -p /deployments/test/clusters/cluster1/services/CS1/applications/service03
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s03 -o service_id=service03
litp inherit -s /software/services/service04 -p /deployments/test/clusters/cluster1/services/CS1/applications/service04
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s04 -o service_id=service04 dependency_list=service07,service08
litp inherit -s /software/services/service05 -p /deployments/test/clusters/cluster1/services/CS1/applications/service05
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s05 -o service_id=service05 dependency_list=service09,service03
litp inherit -s /software/services/service06 -p /deployments/test/clusters/cluster1/services/CS1/applications/service06
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s06 -o service_id=service06 dependency_list=service08
litp inherit -s /software/services/service07 -p /deployments/test/clusters/cluster1/services/CS1/applications/service07
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s07 -o service_id=service07 dependency_list=service05
litp inherit -s /software/services/service08 -p /deployments/test/clusters/cluster1/services/CS1/applications/service08
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s08 -o service_id=service08 dependency_list=service00
litp inherit -s /software/services/service09 -p /deployments/test/clusters/cluster1/services/CS1/applications/service09
litp create -t ha-service-config -p /deployments/test/clusters/cluster1/services/CS1/ha_configs/s09 -o service_id=service09

# 3. Create plan.

litp create_plan

# 4. Check plan structure and apps start order.

let __serv00 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service00 callback_func=cb_create_app
let __serv01 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service01 callback_func=cb_create_app
let __serv02 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service02 callback_func=cb_create_app
let __serv03 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service03 callback_func=cb_create_app
let __serv04 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service04 callback_func=cb_create_app
let __serv05 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service05 callback_func=cb_create_app
let __serv06 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service06 callback_func=cb_create_app
let __serv07 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service07 callback_func=cb_create_app
let __serv08 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service08 callback_func=cb_create_app
let __serv09 CallbackTask callback_method /deployments/test/clusters/cluster1/services/CS1/applications/service09 callback_func=cb_create_app
assertTaskBeforeTask __serv00 __serv01
assertTaskBeforeTask __serv00 __serv08
assertTaskBeforeTask __serv08 __serv06
assertTaskBeforeTask __serv03 __serv08
assertTaskBeforeTask __serv08 __serv04
assertTaskBeforeTask __serv03 __serv05
assertTaskBeforeTask __serv09 __serv05 __serv07 __serv04
assertTaskBeforeTask __serv09 __serv02

# 5. Run plan and wait for successful completion.

litp run_plan

assertPlanState successful