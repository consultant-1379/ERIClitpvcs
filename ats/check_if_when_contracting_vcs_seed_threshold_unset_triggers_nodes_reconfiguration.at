##############
# This AT is for development testing
#
# Goal: check if, during a cluster contraction, with
#       vcs_seed_threshold property unset the value
#       used for the seeding threshold is automatically
#       recalculated.
#
# Scenario:
#       Inherited from testset_common/cluster_common_four_node.atlib
#
# Actions:
#       Remove a new node from the cluster
#

####
# Bulding the scenario
#
assertNoPlan
add-plugins patch_mco_agent
runLitpScript testset_common/cluster_common_four_node.atlib

####
# Check built scenario
#
assertPlanState successful
assertPropertyUnset -p /deployments/test/clusters/cluster1 -o vcs_seed_threshold
assertState -p /deployments/test/clusters/cluster1 Applied

####
# Actions
#

#
# Contract the cluster to have 3 nodes
#
litp remove -p /deployments/test/clusters/cluster1/nodes/node_3

#
# Create Plan
#
litp create_plan

####
# Pre-run Checks
#
assertConfigTask mn1 vcs::configure cluster1 /deployments/test/clusters/cluster1/nodes/node_1 number_of_nodes='2' manage_vxfencing='false' heartbeats_MACs='{"eth3": "08:00:27:21:7D:BC", "eth2": "08:00:27:06:C0:61"}' hostname='mn1' clust_type='sfha' cluster_name='cluster1' fencing_dg_name='null' cluster_ID='1' managment_MAC='{"eth0": "08:00:27:5B:C1:3F"}' cluster_UUID='16f764c0-8637-3668-a788-33d313f8ea20' license_key='ENTERPRISE' hostnames='{"1": "mn1", "0": "mn2"}' rpm_list='VRTSveki VRTSperl VRTSvlic VRTSspt VRTSvxvm VRTSaslapm VRTSvxfs VRTSfssdk VRTSllt VRTSgab VRTSvxfen VRTSamf VRTSpython VRTSvcs VRTSvcsag VRTSvcsea VRTSdbed VRTSodm VRTSsfmh VRTSvbs VRTSvcswiz VRTSsfcpi VRTSglm VRTScavf VRTSgms' base_os='rhel6' heartbeats_SAPs='{}' management_SAP='{}' boot_mode='bios'

assertConfigTask mn2 vcs::configure cluster1 /deployments/test/clusters/cluster1/nodes/node_2 number_of_nodes='2' manage_vxfencing='false' heartbeats_MACs='{"eth3": "08:00:27:21:7D:B3", "eth2": "08:00:27:06:C0:62"}' hostname='mn2' clust_type='sfha' cluster_name='cluster1' fencing_dg_name='null' cluster_ID='1' managment_MAC='{"eth0": "08:00:27:5B:C1:31"}' cluster_UUID='16f764c0-8637-3668-a788-33d313f8ea20' license_key='ENTERPRISE' hostnames='{"1": "mn1", "0": "mn2"}' rpm_list='VRTSveki VRTSperl VRTSvlic VRTSspt VRTSvxvm VRTSaslapm VRTSvxfs VRTSfssdk VRTSllt VRTSgab VRTSvxfen VRTSamf VRTSpython VRTSvcs VRTSvcsag VRTSvcsea VRTSdbed VRTSodm VRTSsfmh VRTSvbs VRTSvcswiz VRTSsfcpi VRTSglm VRTScavf VRTSgms' base_os='rhel6' heartbeats_SAPs='{}' management_SAP='{}' boot_mode='bios'

assertNoCallbackTask mn3 vcs::configure cluster1 /deployments/test/clusters/cluster1/nodes/node_3

assertConfigTask mn4 vcs::configure cluster1 /deployments/test/clusters/cluster1/nodes/node_4 number_of_nodes='2' manage_vxfencing='false' heartbeats_MACs='{"eth3": "08:00:27:21:7D:B6", "eth2": "08:00:27:06:C0:64"}' hostname='mn4' clust_type='sfha' cluster_name='cluster1' fencing_dg_name='null' cluster_ID='1' managment_MAC='{"eth0": "08:00:27:5B:C1:10"}' cluster_UUID='16f764c0-8637-3668-a788-33d313f8ea20' license_key='ENTERPRISE' hostnames='{"1": "mn1", "0": "mn2"}' rpm_list='VRTSveki VRTSperl VRTSvlic VRTSspt VRTSvxvm VRTSaslapm VRTSvxfs VRTSfssdk VRTSllt VRTSgab VRTSvxfen VRTSamf VRTSpython VRTSvcs VRTSvcsag VRTSvcsea VRTSdbed VRTSodm VRTSsfmh VRTSvbs VRTSvcswiz VRTSsfcpi VRTSglm VRTScavf VRTSgms' base_os='rhel6' heartbeats_SAPs='{}' management_SAP='{}' boot_mode='bios'

#####
# Run plan
#
litp run_plan

#####
# Post-run Checks
#
assertPlanState successful
assertPropertyUnset -p /deployments/test/clusters/cluster1 -o vcs_seed_threshold
assertState -p /deployments/test/clusters/cluster1 Applied
